



Network Working Group                                         R. Housley
Internet-Draft                                            Vigil Security
Intended status: Standards Track                                R. Droms
Expires: March 18, 2018                             Interisle Consulting
                                                      September 14, 2017


     TLS 1.3 Option for Negotiation of Visibility in the Datacenter
                   draft-rhrd-tls-tls13-visibility-00

Abstract

   ABSTRACT

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 18, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.






Housley & Droms          Expires March 18, 2018                 [Page 1]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


1.  Introduction

   INTRODCUTION

   [RFC2119]

2.  TLS Visibility Extension

   This section specifies the "tls_visibility" extension, which is
   carried in the ClienHello message and the ServerHello message.

   The general extension mechanisms enable clients and servers to
   negotiate the use of specific extensions.  As specified in
   [I-D.ietf-tls-tls13], clients request extended functionality from
   servers with the extensions field in the ClienHello message.  If the
   server responds HelloRetryRequest, then the client sends another
   ClientHello message that includes the same extensions field as the
   original ClienHello message.

   Most server extensions are carried in the EncryptedExtensions
   message; however, the "tls_visibility" extension is carried in the
   ServerHello message in a manner similar to the "key_share" and
   "pre_shared_key" extensions.  It is only present in the ServerHello
   message if the server wants to enable TLS Visibility for some other
   parties and the client has offered the "tls_visibility" extension in
   the ClientHello message.

   The "tls_visibility" extension MUST NOT appear in the ServerHello
   message unless "tls_visibility" extension appeared in the preceding
   ClientHello message.  The Figure 2 provides an additional row for the
   table in Section 4.2 of [I-D.ietf-tls-tls13].  It indicates that the
   "tls_visibility" extension may appear in the CH (ClientHello message)
   and SH (ServerHello message), and it MUST NOT appear in any other
   messages.  If an implementation recognizes the "tls_visibility"
   extension and receives it in any other message, then the
   implementation MUST abort the handshake with an "illegal_parameter"
   alert.

   +--------------------------------------------------+-------------+
   | Extension                                        |     TLS 1.3 |
   +--------------------------------------------------+-------------+
   | tls_visibility                                   |      CH, SH |
   +--------------------------------------------------+-------------+

         Figure 1: Additional row for the TLS 1.3 extension table

   The Extension structure is defined in [I-D.ietf-tls-tls13]; it is
   repeated here for convenience.



Housley & Droms          Expires March 18, 2018                 [Page 2]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


     struct {
         ExtensionType extension_type;
         opaque extension_data<0..2^16-1>;
     } Extension;

   The "extension_type" identifies the particular extension type, and
   the "extension_data" contains information specific to the particular
   extension type.

   This document specifies the "tls_visibility" extension type, adding
   one new type to ExtensionType:

     enum {
         tls_visibility(TBD), (65535)
     } ExtensionType;

   The "tls_visibility" extension is relevant when the client and server
   are enabling other parties to decrypt the TLS session.

   Clients MUST include the "tls_visibility" extension in the
   ClientHello message to indicate their willingness for other parties
   to decrypt the TLS session.  The server responds with data that
   enables the other parties to derive the keying material needed
   decryption the session if they are in possession of the indicated
   ECDH private key.

     struct {
         select (Handshake.msg_type) {
             case client_hello:  Empty;
             case server_hello:  WrappedSessionSecrets visibility_data;
         };
     } TLSVisibilityExtension;

     struct {
         opaque early_secret<1..255>;
         opaque hs_secret<1..255>;
     } SessionSecrets;

     struct {
         opaque fingerprint<20>;
         opaque key_exchange<1..2^16-1>;
         opaque nonce<0..255>;
         opaque wrapped_secrets<1..2^16-1>;
     } WrappedSessionSecrets;

   The fields in WrappedSessionSecrets are used as follows:





Housley & Droms          Expires March 18, 2018                 [Page 3]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


   o  "fingerprint" contains the leftmost 20 octets of the SHA-256 hash
      of ECDH public key that was used by the server to compute the
      session secret wrapping key.  The public key is DER-encoded in the
      SubjectPublicKeyInfo [RFC5280] for the SHA-256 hash computation.
      The key manager tells the server which AEAD algorithm to use with
      this ECDH public key at the time it is distributed.

   o  "key_exchange" contains the ephemeral ECDH public key generated by
      the server that is part of the same group as the ECDH public key
      identified by the "fingerprint".  The server uses the ephemeral
      ECDH private key and the ECDH public key identified by the
      "fingerprint" to compute a shared secret value, called Z, and then
      uses HKDF [RFC5869] to produce the session secret wrapping key,
      called Ke, which uses an AEAD algorithm, such as AES-KEY-WRAP-256
      [RFC5649] or AES-GCM-128 [GCM].  Ke is computed as follows:

            PRK = HKDF-Extract(0x00, Z)
            Ke = HKDF-Expand(PRK, "tls_visibility", AEAD_key_size)

   o  "nonce" contains the nonce value for AEAD algorithm, if one is
      needed.  The "nonce" is zero length if one is not needed.

   o  "wrapped_secrets" contains the SessionSecrets structure encrypted
      with the AEAD algorithm under Ke.

   The fields in SessionSecrets are used as follows:

   o  "early_secret" contains the Early Secret that was derived from the
      pre-shared key.  If this session did not use a pre-shared key,
      then the Early Secret is HKDF-Extract(0, 0).

   o  "hs_secret" contains the handshake key that was computed using
      (EC)DHE.

3.  Alternative Approaches

   This section captures the rationale for pursuing this approach to TLS
   visibility instead of the various alternative approaches.

   Server uses a static Diffie-Hellman key pair:  The private Diffie-
      Hellman key gets shared with the points that need visibility.
      While this approach scales, the TLS client is unaware of the
      sharing.

   Export of ephemeral keys:  In large enterprises there will be
      billions of ephemeral keys to export and distribute.  Transporting
      these keys to tools for decryption of packets in real time will be
      difficult, adding greatly to the complexity of the solution.



Housley & Droms          Expires March 18, 2018                 [Page 4]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


   Export of decrypted traffic from TLS proxy devices:  Decrypting
      traffic only at the edge of the enterprise datacenter does not
      meet all of the enterprise requirements, which include
      troubleshooting, fraud detection, and network security monitoring.
      Further, the number of TLS proxies needed are quite costly, add
      latency, and increase production risk.

   Reliance on TCP/IP headers:  TCP and IP headers are not adequate for
      the enterprise requirements.  Troubleshooting, fraud detection,
      and network security monitoring need access to the plaintext
      payload.  For example, troubleshooters must be able to find
      specific transactions, user identifiers, session identifiers,
      URLs, and time stamps.

   Reliance on application and server logs:  Logging is not adequate for
      enterprise requirements.  Code developers cannot anticipate every
      possible problem for logging, and system administrators turn much
      of the logging off for their installation.

   Troubleshooting and malware analysis at the endpoint:  Endpoints are
      focused on providing a service, and they cannot handle the
      additional burden of the various enterprise monitoring
      requirements.

   Adding TCP/UDP extensions:  An important part of troubleshooting,
      network security monitoring, etc. is analysis of the application-
      specific payload of the packet.  It is not possible to anticipate
      ahead of time, among thousands of unique applications, which
      fields in the application payload will be important.

4.  IANA Considerations

   IANA CONSIDERATIONS

5.  Security Considerations

   SECURITY CONSIDERATIONS

6.  Acknowledgements

   ACKNOWLEDGMENTS

7.  References








Housley & Droms          Expires March 18, 2018                 [Page 5]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


7.1.  Normative References

   [I-D.ietf-tls-tls13]
              Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", draft-ietf-tls-tls13-21 (work in progress),
              July 2017.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

   [RFC5869]  Krawczyk, H. and P. Eronen, "HMAC-based Extract-and-Expand
              Key Derivation Function (HKDF)", RFC 5869,
              DOI 10.17487/RFC5869, May 2010, <https://www.rfc-
              editor.org/info/rfc5869>.

7.2.  Informative References

   [GCM]      McGrew, D. and J. Viega, "The Galois/Counter Mode of
              Operation (GCM)", January 2004.

              Submission to NIST.
              <http://csrc.nist.gov/CryptoToolkit/modes/proposedmodes/
              gcm/gcm-spec.pdf>

   [RFC5649]  Housley, R. and M. Dworkin, "Advanced Encryption Standard
              (AES) Key Wrap with Padding Algorithm", RFC 5649,
              DOI 10.17487/RFC5649, September 2009, <https://www.rfc-
              editor.org/info/rfc5649>.

Authors' Addresses

   Russ Housley
   Vigil Security
   918 Spring Knoll Drive
   Herndon, VA  20170
   USA

   Email: housley@vigilsec.com





Housley & Droms          Expires March 18, 2018                 [Page 6]

Internet-Draft      Option for TLS 1.3 in Datacenter      September 2017


   Ralph Droms
   Interisle Consulting

   Email: rdroms.ietf@gmail.com















































Housley & Droms          Expires March 18, 2018                 [Page 7]
